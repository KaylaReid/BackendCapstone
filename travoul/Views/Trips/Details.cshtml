@model travoul.Models.Trip

@{
    ViewData["Title"] = "Details";
}

<h3>Details for @Html.DisplayFor(model => model.Title)</h3>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Title
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt>
            Continent
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Continent.Name)
        </dd>
        <dt>
            Location
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Location)
        </dd>
        <dt>
            Dates of Trip
        </dt>
        <dd>
            @Html.DisplayFor(model => model.TripDates)
        </dd>
        <dt>
            Accomodation
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Accommodation)
        </dd>
        <dt>
            Budget
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Budget)
        </dd>
        <dt>Travel Type</dt>
        <dd>
            <ul>
                @foreach (var TripTT in Model.TripTravelTypes)
                {
                    <li>@string.Format(TripTT.TravelType.Type)</li>
                }
            </ul>
        </dd>
        <hr />
        <dt>Things I wanted to do</dt>
        <dd>
            <ul>
                @if (Model.TripVisitLocations.Where(t => t.LocationTypeId == 1 && t.IsCompleted == false).Count() > 0)
                {
                    <h4>Food</h4>
                    @foreach (var TripL in Model.TripVisitLocations)
                    {
                        if (TripL.LocationType.Type == "Food" && TripL.IsCompleted == false)
                        {
                            <li>@string.Format(TripL.Name)<b>:</b> @string.Format(TripL.Description)</li>
                        }
                    }
                }
                @if (Model.TripVisitLocations.Where(t => t.LocationTypeId == 2 && t.IsCompleted == false).Count() > 0)
                {
                    <h4>Places</h4>
                    @foreach (var TripL in Model.TripVisitLocations)
                    {
                        if (TripL.LocationType.Type == "Place" && TripL.IsCompleted == false)
                        {
                            <li>@string.Format(TripL.Name)<b>:</b> @string.Format(TripL.Description)</li>
                        }
                    }
                }
            </ul>
        </dd>
        <dt>Things I did do</dt>
        <dd>
            <ul>
                @if (Model.TripVisitLocations.Where(t => t.LocationTypeId == 1 && t.IsCompleted == true).Count() > 0)
                {
                    <h4>Food</h4>
                    @foreach (var TripL in Model.TripVisitLocations)
                    {
                        if (TripL.LocationType.Type == "Food" && TripL.IsCompleted == true)
                        {
                            <li>@string.Format(TripL.Name)<b>:</b> @string.Format(TripL.Description)</li>
                        }
                    }
                }
                @if (Model.TripVisitLocations.Where(t => t.LocationTypeId == 2 && t.IsCompleted == true).Count() > 0)
                {
                    <h4>Places</h4>
                    @foreach (var TripL in Model.TripVisitLocations)
                    {
                        if (TripL.LocationType.Type == "Place" && TripL.IsCompleted == true)
                        {
                            <li>@string.Format(TripL.Name)<b>:</b> @string.Format(TripL.Description)</li>
                        }
                    }
                }
            </ul>
        </dd>
        <hr />
        <dt>What I'd do again</dt>
        @foreach (var TripR in Model.TripRetros)
        {
            if (TripR.RetroTypeId == 1)
            {
                <dd>@string.Format(TripR.Description)</dd>
            }
        }
        <br />
        <dt>What I'd do different</dt>
        @foreach (var TripR in Model.TripRetros)
        {
            if (TripR.RetroTypeId == 2)
            {
                <dd>@string.Format(TripR.Description)</dd>
            }
        }
    </dl>
</div>
<div>
    <a asp-controller="Trips" asp-action="FinishedTripEdit" asp-route-id="@Model.TripId">Edit</a> |
    <a class="btn btn-secondary text-white" data-toggle="modal" data-target="#deletePlannedModal">Delete</a> |
    <a asp-action="Index">Back to List</a>
</div>

@*modal for delete*@
<div class="modal fade" id="deletePlannedModal" tabindex="-1" role="dialog" aria-labelledby="deletePlannedModal" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deletePlannedModalLabel">Delete Confimation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this trip? It will be permanetly removed.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <form asp-controller="Trips" asp-action="DeleteTrip" asp-route-id="@Model.TripId">
                    <button class="btn btn-danger text-white">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>
